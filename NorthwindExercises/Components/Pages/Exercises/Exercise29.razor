@page "/exercises/exercise29"

@using Microsoft.EntityFrameworkCore.Internal

@using System.ComponentModel.DataAnnotations;
@using Microsoft.EntityFrameworkCore;
@using NorthwindExercises.Context;
@using NorthwindExercises.Entities;


@inject NavigationManager NavigationManager
@inject IDbContextFactory<DbContextNorthwind> DbContextFactory

<PageTitle>Exercise 29</PageTitle>

<MudGrid>
    <MudItem>
        <MudStack>
            <MudText Typo="Typo.h6" Color="Color.Primary">Exercise</MudText>
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.body2">29. Create a report that shows the CompanyName, ContactTitle, City,
                        Country of all customers in any city in Mexico or other
                        cities in Spain other than Madrid.
                    </MudText>
                </MudCardContent>
                <MudCardActions>
                    @if (Customers == null)
                    {
                        <MudButton Disabled="@_processing" Variant="Variant.Text" OnClick="@GetDetailsAsync"
                            Color="Color.Primary">
                            @if (_processing)
                            {
                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                <MudText Class="ms-2">Processing</MudText>
                            }
                            else
                            {
                                <MudText>Solution</MudText>
                            }
                        </MudButton>
                    }
                </MudCardActions>
            </MudCard>

            @if (Customers != null)
            {
                <MudText Typo="Typo.h6" Color="Color.Primary">Solution</MudText>
                <MudPaper Class="pa-3">
                    <MudTable Items="Customers" Hover="true" Elevation="0">
                        <HeaderContent>
                            <MudTh>
                                CompanyName
                            </MudTh>
                            <MudTh>
                                ContactTitle
                            </MudTh>
                            <MudTh>
                                City
                            </MudTh>
                            <MudTh>
                                Country
                            </MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Company Name">@context.CompanyName</MudTd>
                            <MudTd DataLabel="Contact Title">@context.ContactTitle</MudTd>
                            <MudTd DataLabel="City">@context.City</MudTd>
                            <MudTd DataLabel="Country">@context.Country</MudTd>
                        </RowTemplate>
                        <NoRecordsContent>
                            <MudText>No records found.</MudText>
                        </NoRecordsContent>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </MudPaper>
            }
        </MudStack>
    </MudItem>
    <MudSpacer />
</MudGrid>

@code {

    private bool _processing = false;
    private List<Customer>? Customers { get; set; }
    private async Task GetDetailsAsync()

    {
        _processing = true;

        // Simulate processing delay
        await Task.Delay(500);

        await using var dbContext = await DbContextFactory.CreateDbContextAsync();

        Customers = await dbContext.Customers
        .Where(o => o.Country == "Mexico" || (o.Country == "Spain" && o.City != "Madrid"))
        .Select(o => new Customer
        {
            CompanyName = o.CompanyName,
            ContactTitle = o.ContactTitle,
            City = o.City,
            Country = o.Country
        })
        .ToListAsync();

        _processing = false;
    }
}
