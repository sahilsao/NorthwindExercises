@page "/exercises/exercise15"


@using System.ComponentModel.DataAnnotations;
@using Microsoft.EntityFrameworkCore;
@using NorthwindExercises.Context;
@using NorthwindExercises.Entities;



@inject NavigationManager NavigationManager
@inject IDbContextFactory<DbContextNorthwind> DbContextFactory

<PageTitle>Exercise 15</PageTitle>

<MudGrid>
    <MudItem>
        <MudStack>
            <MudText Typo="Typo.h6" Color="Color.Primary">Exercise</MudText>
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.body2">15. Create a report that shows all the orders where the freight cost more
                        than $500</MudText>
                </MudCardContent>
                <MudCardActions>
                    @if (Orders == null)
                    {
                        <MudButton Disabled="@_processing" Variant="Variant.Text" OnClick="@GetDetailsAsync"
                            Color="Color.Primary">
                            @if (_processing)
                            {
                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                <MudText Class="ms-2">Processing</MudText>
                            }
                            else
                            {
                                <MudText>Solution</MudText>
                            }
                        </MudButton>
                    }
                </MudCardActions>
            </MudCard>

            @if (Orders != null)
            {
                <MudText Typo="Typo.h6" Color="Color.Primary">Solution</MudText>
                <MudPaper Class="pa-3">
                    <MudTable Items="Orders" Hover="true" Elevation="0">
                        <HeaderContent>
                            <MudTh>
                                Order ID
                            </MudTh>
                            <MudTh>
                                Customer ID
                            </MudTh>
                            <MudTh>
                                Employee ID
                            </MudTh>
                            <MudTh>
                                Freight
                            </MudTh>
                            <MudTh>
                                OrderDate
                            </MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Order ID">@context.OrderId</MudTd>
                            <MudTd DataLabel="Customer Id">@context.CustomerId</MudTd>
                            <MudTd DataLabel="Employee Id">@context.EmployeeId</MudTd>
                            <MudTd DataLabel="Freight">@context.Freight?.ToString("C")</MudTd>
                            <MudTd DataLabel="Order Date">@context.OrderDate?.ToString("dd/MM/yyyy")</MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </MudPaper>
            }
        </MudStack>
    </MudItem>
    <MudSpacer />
</MudGrid>

@code {

    private bool _processing = false;
    public List<Order>? Orders { get; set; }
    private async Task GetDetailsAsync()
    {
        _processing = true;

        await Task.Delay(500);

        await using var dbContext = await DbContextFactory.CreateDbContextAsync();

        Orders = await dbContext.Orders
        .Where(e => e.Freight > 500)
        .ToListAsync();

        _processing = false;
    }
}
